name: Quick Windows Build

on:
  push:
    branches: [ main, ci/fix-mp4v2-snprintf-guard, rebuild/minimal-wasapi ]
  pull_request:
    branches: [ main ]

jobs:
  build-win:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup MSBuild path
        run: |
          echo "Finding msbuild via vswhere..."
          $vswhere = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          if (Test-Path $vswhere) {
            $inst = & $vswhere -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
            Write-Host "VS Path: $inst"
            $msbuild = Join-Path $inst "MSBuild\Current\Bin\MSBuild.exe"
            Write-Host "MSBuild: $msbuild"
            echo "MSBUILD_PATH=$msbuild" | Out-File -FilePath $env:GITHUB_ENV -Encoding ASCII -Append
          } else {
            Write-Error "vswhere not found"
            exit 1
          }
        shell: powershell

      - name: Build minimal solution (Release|x64)
        run: |
          $msb = "$Env:MSBUILD_PATH"
          if (-not (Test-Path $msb)) { Write-Error "msbuild not found at $msb"; exit 1 }
          Write-Host "MSBuild: $msb"
          # Run MSBuild and capture stdout/stderr to msbuild.log for debugging
          & $msb "${{ github.workspace }}\vc\freepiano_minimal.vcxproj" /t:Build /p:Configuration=Release /p:Platform=x64 /m > msbuild.log 2>&1
          # dump a short preview in the job log to help quick inspection
          Write-Host '---- MSBuild log (first 200 lines) ----'
          Get-Content msbuild.log -TotalCount 200 | ForEach-Object { Write-Host $_ }
        shell: powershell

      - name: List build outputs (debug)
        if: success()
        run: |
          Write-Host "Listing any freepiano_minimal.dll under vc folder:" 
          Get-ChildItem -Path "${{ github.workspace }}\vc" -Recurse -Filter "freepiano_minimal.dll" -ErrorAction SilentlyContinue | ForEach-Object { Write-Host $_.FullName }
        shell: powershell

      - name: Upload built DLL
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: freepiano_minimal_dll
          # Use glob so any platform/config output path (x64/Release, Release\x64, etc.) is matched
          path: |
            vc/**/freepiano_minimal.dll

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: freepiano_msbuild_log
          path: msbuild.log
